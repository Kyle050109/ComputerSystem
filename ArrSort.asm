// Sorts the array of length R2 whose first element is at RAM[R1] in ascending order in place. Sets R0 to True (-1) when complete.
// (R0, R1, R2 refer to RAM[0], RAM[1], and RAM[2], respectively.)

// Put your code here.
@R1
D=M      
@i
M=D 
@R2
D=M
@length
M=D  
(OuterLoop)
@i
D=M
@length
D=M-D  
@End
D;JEQ 
@i
D=M
@minIndex
M=D     
@i
D=M
@j
M=D    
(InnerLoop)
@j
D=M
@length
D=M-D     
@Swap
D;JEQ   
@j
D=M
@R1
A=D+M    
D=M       
@minIndex
A=M
@R1
A=A+M     
D=M-D    
@Next
D;JGT    
@j
D=M
@minIndex
M=D    

(Next)
@j
M=M+1
@InnerLoop
0;JMP   
(Swap)
@i
D=M
@R1
A=D+M
D=M     
@temp
M=D     

@minIndex
D=M
@R1
A=D+M
D=M       
@i
A=M
@R1
A=A+M
M=D      

@temp
D=M
@minIndex
A=M
@R1
A=A+M
M=D    
@i
M=M+1
@OuterLoop
0;JMP

(End)
@R0
M=-1
(END)
@END
0;JMP
